"use strict";
/* eslint-disable @typescript-eslint/no-var-requires */
Object.defineProperty(exports, "__esModule", { value: true });
const config_1 = require("@nomiclabs/buidler/config");
const task_names_1 = require("@nomiclabs/buidler/builtin-tasks/task-names");
const plugins_1 = require("@nomiclabs/buidler/plugins");
const upgrades_core_1 = require("@openzeppelin/upgrades-core");
const validations_1 = require("./validations");
function default_1() {
    config_1.internalTask(task_names_1.TASK_COMPILE_RUN_COMPILER, async (args, bre, runSuper) => {
        // TODO: patch input
        const output = await runSuper();
        const decodeSrc = upgrades_core_1.solcInputOutputDecoder(args.input, output);
        const validations = upgrades_core_1.validate(output, decodeSrc);
        await validations_1.writeValidations(bre, validations);
        return output;
    });
    config_1.extendEnvironment(bre => {
        bre.upgrades = plugins_1.lazyObject(() => {
            const { makeChangeProxyAdmin, makeTransferProxyAdminOwnership } = require('./admin');
            const { makeDeployProxy } = require('./deploy-proxy');
            const { makeUpgradeProxy, makePrepareUpgrade } = require('./upgrade-proxy');
            return {
                deployProxy: makeDeployProxy(bre),
                upgradeProxy: makeUpgradeProxy(bre),
                prepareUpgrade: makePrepareUpgrade(bre),
                admin: {
                    changeProxyAdmin: makeChangeProxyAdmin(bre),
                    transferProxyAdminOwnership: makeTransferProxyAdminOwnership(bre),
                },
            };
        });
    });
}
exports.default = default_1;
//# sourceMappingURL=index.js.map