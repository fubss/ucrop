import { BuidlerRuntimeEnvironment } from '@nomiclabs/buidler/types';
import type { ContractFactory, Contract } from 'ethers';
export declare type PrepareUpgradeFunction = (proxyAddress: string, ImplFactory: ContractFactory, opts?: UpgradeOptions) => Promise<string>;
export declare type UpgradeFunction = (proxyAddress: string, ImplFactory: ContractFactory, opts?: UpgradeOptions) => Promise<Contract>;
export interface UpgradeOptions {
    unsafeAllowCustomTypes?: boolean;
}
export declare function makePrepareUpgrade(bre: BuidlerRuntimeEnvironment): PrepareUpgradeFunction;
export declare function makeUpgradeProxy(bre: BuidlerRuntimeEnvironment): UpgradeFunction;
//# sourceMappingURL=upgrade-proxy.d.ts.map